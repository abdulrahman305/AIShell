jobs:
- job: build
  displayName: Build AIShell module
  condition: succeeded()
  pool:
    type: linux
  variables:
  - name: runCodesignValidationInjection
    value: false
  - name: NugetSecurityAnalysisWarningLevel
    value: none
  - group: DotNetPrivateBuildAccess
  - name: ob_outputDirectory
    value: '$(Build.ArtifactStagingDirectory)/ONEBRANCH_ARTIFACT'
  - name: repoRoot
    value: $(Build.SourcesDirectory)\AIShell
  - name: ob_sdl_sbom_enabled
    value: false
  - name: ob_sdl_codeSignValidation_enabled
    value: false
  - name: ob_sdl_tsa_configFile
    value: $(repoRoot)\.config\tsaoptions.json
  #CodeQL tasks added manually to workaround signing failures
  - name: ob_sdl_codeql_compiled_enabled
    value: false

  steps:
  - checkout: self
    clean: true
    env:
      ob_restore_phase: true

  - pwsh: |
      Get-ChildItem Env:
    displayName: Capture environment variables
    env:
      ob_restore_phase: true

  - template: /.pipelines/templates/update-nuget-config.yml@self
    parameters:
      repoRoot: $(repoRoot)

  # Add CodeQL Init task right before your 'Build' step.
  - task: CodeQL3000Init@0
    env:
      ob_restore_phase: true
    inputs:
      Enabled: true
      Language: csharp

  - pwsh: |
      Import-Module $(repoRoot)/build.psm1 -Force
      Install-Dotnet

      $runtime = 'linux-x64'
      Write-Verbose "Building with Runtime: $runtime" -Verbose
      Start-Build -Runtime $runtime -Configuration Release -Clean -Verbose

      $outputJson = '$(repoRoot)/_build_output_.json'
      if (Test-Path $outputJson) {
        $result = Get-Content $outputJson | ConvertFrom-Json
        Write-Verbose "Module path: $($result.Module)" -Verbose

        $vstsCommandString = "vso[task.setvariable variable=ModuleDir]$($result.Module)"
        Write-Host ("sending " + $vstsCommandString)
        Write-Host "##$vstsCommandString"
      }
    displayName: 'Build AIShell module'
    env:
      ob_restore_phase: true

  # Add CodeQL Finalize task right after your 'Build' step.
  - task: CodeQL3000Finalize@0
    env:
      ob_restore_phase: true

  - pwsh: |
      Get-ChildItem $(ModuleDir) -Recurse
    displayName: "List AIShell module files"
    env:
      ob_restore_phase: true

  - task: CopyFiles@2
    displayName: "Upload unsigned module files"
    env:
      ob_restore_phase: true
    inputs:
      SourceFolder: $(ModuleDir)
      Contents: '**/*'
      TargetFolder: $(ob_outputDirectory)

  - template: /.pipelines/templates/finalize.yml@self

- job: sign
  displayName: Sign AIShell module
  condition: succeeded()
  dependsOn: build
  pool:
    type: windows
  variables:
  - name: runCodesignValidationInjection
    value: false
  - name: NugetSecurityAnalysisWarningLevel
    value: none
  - group: DotNetPrivateBuildAccess
  - group: certificate_logical_to_actual
  - name: ob_outputDirectory
    value: '$(Build.ArtifactStagingDirectory)/ONEBRANCH_ARTIFACT'
  - name: repoRoot
    value: $(Build.SourcesDirectory)\AIShell
  - name: ob_sdl_codeSignValidation_enabled
    value: false
  - name: ob_sdl_binskim_enabled
    value: false
  - name: ob_sdl_tsa_configFile
    value: $(repoRoot)\.config\tsaoptions.json
  - name: ob_sdl_codeql_compiled_enabled
    value: false
  - name: ob_sdl_sbom_packageName
    value: 'AIShell.Module'

  steps:
  - checkout: self
    clean: true
    env:
      ob_restore_phase: true

  - pwsh: |
      Get-ChildItem Env:
    displayName: Capture environment variables
    env:
      ob_restore_phase: true

  - template: /.pipelines/templates/update-nuget-config.yml@self
    parameters:
      repoRoot: $(repoRoot)

  - pwsh: |
      Import-Module $(repoRoot)\build.psm1 -Force
      Install-Dotnet
      dotnet restore '$(repoRoot)\shell\AIShell.Integration'
    displayName: 'Restore to get correct SBOM'
    env:
      ob_restore_phase: true

  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: drop_module_build
      path: $(Pipeline.Workspace)/drop_module_build
    displayName: Download build

  - pwsh: |
      Get-ChildItem -Path $(Pipeline.Workspace)/drop_module_build -Recurse
    displayName: 'List downloaded files'

  - template: /.pipelines/templates/sign-files.yml@self
    parameters:
      appPath: '$(Pipeline.Workspace)/drop_module_build'
      repoRoot: '$(repoRoot)'

  - template: /.pipelines/templates/finalize.yml@self
