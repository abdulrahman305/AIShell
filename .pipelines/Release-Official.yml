trigger: none

parameters: # parameters are shown up in ADO UI in a build queue time
  - name: 'debug'
    displayName: 'Enable debug output'
    type: boolean
    default: false
  - name: 'publish'
    displayName: 'Publish artifacts'
    type: boolean
    default: true

variables:
  - name: CDP_DEFINITION_BUILD_COUNT
    value: $[counter('', 0)]
  - name: system.debug
    value: ${{ parameters.debug }}
  - name: ob_outputDirectory
    value: '$(Build.ArtifactStagingDirectory)/ONEBRANCH_ARTIFACT'
  - name: WindowsContainerImage
    value: 'onebranch.azurecr.io/windows/ltsc2022/vse2022:latest'
  - name: LinuxContainerImage
    value: mcr.microsoft.com/onebranch/cbl-mariner/build:2.0

resources:
  repositories:
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

  pipelines:
    - pipeline: AIShellPackagePipeline
      source: 'AIShell-Package-Official'
      trigger:
        branches:
          include:
            - release-*

extends:
  template: v2/OneBranch.Official.CrossPlat.yml@templates
  parameters:
    release:
      category: NonAzure
    cloudvault:
      enabled: false
    featureFlags:
      LinuxHostVersion:
        Network: KS3
      WindowsHostVersion:
        Version: 2022
        Network: KS3
    globalSdl:
      asyncSdl:
        enabled: true
        tsaOptionsFile: .config\tsaoptions.json

    stages:
    - stage: msixbundle
      displayName: 'Create MSIX Bundle'
      jobs:
      - template: /.pipelines/templates/release-msix-bundle.yml@self

    - stage: ManualValidation
      dependsOn: []
      displayName: Manual Validation
      jobs:
      - template: /.pipelines/templates/wait-for-approval.yml@self
        parameters:
          displayName: Validate Windows Packages
          jobName: ValidateWinPkg
          instructions: |
            Validate zip package on Windows
      - template: /.pipelines/templates/wait-for-approval.yml@self
        parameters:
          displayName: Validate OSX Packages
          jobName: ValidateOsxPkg
          instructions: |
            Validate tar.gz package on macOS
      - template: /.pipelines/templates/wait-for-approval.yml@self
        parameters:
          displayName: Validate Linux Packages
          jobName: ValidateLinuxPkg
          instructions: |
            Validate tar.gz package on Linux
      - template: /.pipelines/templates/wait-for-approval.yml@self
        parameters:
          displayName: Validate AIShell module
          jobName: ValidateModule
          instructions: |
            Validate AIShell module
      - template: /.pipelines/templates/wait-for-approval.yml@self
        parameters:
          displayName: Validate NuGet SDK
          jobName: ValidateSDK
          instructions: |
            Validate NuGet SDK package

    - stage: UpdateChangeLog
      displayName: Update the changelog
      dependsOn: ['ManualValidation', 'msixbundle']
      jobs:
      - template: /.pipelines/templates/wait-for-approval.yml@self
        parameters:
          displayName: Make sure the changelog is updated
          jobName: MergeChangeLog
          instructions: |
            Update and merge the changelog for the release.
            This step is required for creating GitHub draft release.

    - stage: PublishGitHubRelease
      displayName: Publish GitHub Release
      dependsOn: UpdateChangeLog
      variables:
        ob_release_environment: Production
      jobs:
      - template: /.pipelines/templates/release-publish-github.yml@self
        parameters:
          publish: ${{ parameters.publish }}

    - stage: PublishNuGet
      displayName: Publish NuGet
      dependsOn: PublishGitHubRelease
      variables:
        ob_release_environment: Production
      jobs:
      - template: /.pipelines/templates/release-publish-nuget.yml@self
        parameters:
          publish: ${{ parameters.publish }}

    - stage: PublishModule
      displayName: Publish Module
      dependsOn: PublishGitHubRelease
      variables:
        ob_release_environment: Production
      jobs:
      - template: /.pipelines/templates/release-publish-module.yml@self
        parameters:
          publish: ${{ parameters.publish }}

    - stage: PublishMsix
      dependsOn: PublishGitHubRelease
      displayName: Publish MSIX to store
      jobs:
      - template: /.pipelines/templates/wait-for-approval.yml@self
        parameters:
          displayName: Publish the MSIX Bundle package to store
          jobName: PublishToStore
          instructions: |
            Ask Steve to release MSIX bundle package to Store

    - stage: ReleaseDone
      displayName: Finish Release
      dependsOn: ['PublishMsix', 'PublishModule', 'PublishNuGet']
      jobs:
      - template: /.pipelines/templates/wait-for-approval.yml@self
        parameters:
          displayName: Retain Build
          jobName: RetainBuild
          instructions: |
            Retain the build
      - template: /.pipelines/templates/wait-for-approval.yml@self
        parameters:
          displayName: Delete release branch
          jobName: DeleteBranch
          instructions: |
            Delete release
