# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

name: apiscan-$(BUILD.SOURCEBRANCHNAME)-$(Build.BuildId)
trigger: none

parameters:
  - name: FORCE_CODEQL
    displayName: Debugging - Enable CodeQL and set cadence to 1 hour
    type: boolean
    default: false
  - name: SkipVerifyPackages
    type: boolean
    default: false

variables:
  # PAT permissions NOTE: Declare a SymbolServerPAT variable in this group with a 'microsoft' organizanization scoped PAT with 'Symbols' Read permission.
  # A PAT in the wrong org will give a single Error 203. No PAT will give a single Error 401, and individual pdbs may be missing even if permissions are correct.
  - group: symbols
  - name: ob_outputDirectory
    value: '$(Build.ArtifactStagingDirectory)/ONEBRANCH_ARTIFACT'
  - name: CDP_DEFINITION_BUILD_COUNT
    value: $[counter('', 0)]
  # Defines the variables CgPat, CgOrganization, and CgProject
  - group: 'ComponentGovernance'
  - group: 'PoolNames'
  - name: LinuxContainerImage
    value: mcr.microsoft.com/onebranch/azurelinux/build:3.0
  - name: WindowsContainerImage
    value: onebranch.azurecr.io/windows/ltsc2022/vse2022:latest
  - ${{ if eq(parameters['FORCE_CODEQL'],'true') }}:
    # Cadence is hours before CodeQL will allow a re-upload of the database
    - name: CodeQL.Cadence
      value: 0
  - name: CODEQL_ENABLED
    ${{ if or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(parameters['FORCE_CODEQL'],'true')) }}:
      value: true
    ${{ else }}:
      value: false
  - name: Codeql.TSAEnabled
    value: $(CODEQL_ENABLED)
  # AnalyzeInPipeline: false = upload results
  # AnalyzeInPipeline: true = do not upload results
  - name: Codeql.AnalyzeInPipeline
    value: $(CODEQL_ENABLED)

resources:
  repositories:
  - repository: templates
    type: git
    name: OneBranch.Pipelines/GovernedTemplates
    ref: refs/heads/main

extends:
  template: v2/OneBranch.NonOfficial.CrossPlat.yml@templates
  parameters:
    featureFlags:
      WindowsHostVersion:
        Version: 2022
    globalSdl:
      codeql:
        compiled:
          enabled: $(CODEQL_ENABLED)
        tsaEnabled: $(CODEQL_ENABLED) # This enables TSA bug filing only for CodeQL 3000
      armory:
        enabled: false
      sbom:
        enabled: false
      cg:
        enabled: true
        ignoreDirectories: 'docs,shell,tools'
      tsa:
        enabled: true  # onebranch publish all SDL results to TSA. If TSA is disabled all SDL tools will forced into 'break' build mode.
      credscan:
        enabled: true
        scanFolder:  $(Build.SourcesDirectory)
      binskim:
        break: true  # always break the build on binskim issues in addition to TSA upload
      policheck:
        break: true  # always break the build on policheck issues. You can disable it by setting to 'false'
      # APIScan requires a non-Ready-To-Run build
      apiscan:
        enabled: true
        softwareName: 'AIShell' # Default is repo name
        versionNumber: '1.0' # Default is build number
        isLargeApp: false # Default: false.
        symbolsFolder: $(SymbolsServerUrl);$(ob_outputDirectory)
      tsaOptionsFile: .config\tsaoptions.json
      psscriptanalyzer:
          enabled: true
          policyName: Microsoft
          break: false

    stages:
      - stage: APIScan
        displayName: 'ApiScan'
        dependsOn: []
        jobs:
          - template: /.pipelines/templates/compliance/apiscan-build.yaml@self
            parameters:
              parentJobs: []
